How to use the BRules translator.

1) on your classpath, include the following:
 - skij.jar
 - xml4j.jar
 - the brules directory (com.ibm.jikes.skij.brules, but you can change it)
 - the CLP packages

2) Use the static methods in BRules to convert CLP objects to XML
files, or vice versa.


Notes: 

Not making use of any DTDs or XML Schemas; we just parse the
XML with XML4J a generic structure and interpret it after the fact
using Skij.

Thus can avoid writing grammar to parse cf. JavaCC style!

Issue for future work:  how we would make use of a DTD once we have
one, to parse in or to convert out eg to new rule system.

Important Java Methods (in com.ibm.jikes.skij.brules.BRules):
  public static CLP XMLFile2CLP(String XMLinFile) throws SchemeException {
  public static void CLP2XMLFile(CLP clp, String XMLoutFile) throws SchemeException {

Important Functions:

xml-obj means in XML4J form, i.e., DOM object in Java

(parse-clp-file <clp-filename>)  returns a clp-obj
(write-clp-file <clp-obj> <clp-filename>)

(parse-xml-file <xml-filename>) returns a xml-obj  
(write-xml-file <xml-obj> <xml-filename>)

(xmlfile->clp <xml-filename>)
(clp->xmlfile <clp-obj> <xml-filename>)  

(obj->xml <any-object>) returns a xml-obj
(xml->obj <xml-obj>) returns a any-obj

(display-document <xml>)    XML tree inspector

Internally, there are tables that map classes to XML tags and vice
versa. These tables are defined by the forms:
(define-xml <classname> <body>)   
  Body emits XML appropriate for an object of the given class.
(define-xml-in <xml-tagname> <body>)
  Body constructs a Java object as specified by the XML.

Some procedures and macros that these translators use:
(spit-xml <xml>)        stick <xml> 
spit  -- emit XML for an object
elt
for-xml-children	iterate over subelements

OTHER things to look at:

EditorMaker (alphaBean)
